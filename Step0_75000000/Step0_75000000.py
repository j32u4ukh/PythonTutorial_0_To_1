# -*- coding: utf-8 -*-
"""
Created on Fri Oct 25 22:31:56 2019

@author: j32u4ukh

教學大綱；シラバス；syllabus：
1. import
2. from
3. 多個 import；複数の import
4. pip

這個世界上有許多工程師樂於分享他們所寫的程式，使用別人事先寫好的程式，可以讓我們省去
很多麻煩。
この世の沢山エンジニアは彼らが書いたのプログラムを皆に共有する。これを使って、もっと
簡単に自分のプログラムを完成する。

＝＝＝＝＝
他們會根據程式的功能與內容，利用資料夾把程式碼做分類，並把所有程式碼打包起來供
其他人使用，我們使用的這個又叫做'套件'。
彼らはプログラムの機能と内容にフォルダーで分類(ぶんるい)して皆に使われる、最も上の
フォルダーが”パッケージ”と呼ばれる。

＝＝＝＝＝
當我們要使用'套件'，首先要下載，然後是 import 。這裡先說明 import ，比如：
數學計算使很常會使用到的功能，因此有個'套件'名稱叫做 math ，使用方式如下。
パッケージを使いたいなら、それをダウンロードして、 import を使って。先ずは import を
説明しよう、例えば：数学の計算が沢山使われるので、 math というのパッケージがあります。
使い方は下のようにしてください。
"""
import math

print(math.log10(100))  # 2.0
"""
第一行告訴程式我要引入 math 這個'套件'，而 math 後一點接著 log10 表示我要使用  math 
當中的 log10 這個函式。
第一行はプログラムに” math というパッケージをインポートしてください”に教えて。
math の後ろの点は log10 を続いて、 math の関数 log10 を使うことです。

＝＝＝＝＝
log10 是以 10 為底的 log ，log2 是以 2 為底的 log ，是指數的反函數，log2(8) = 3 
表示 2 的 3 次方是 8 ，以此類推。
log10 は「底(てい)を 10 とするの対数」、　log2 は「底を 2 とするの対数」、
指数(しすう)の逆関数(ぎゃくかんすう)。log2(8) = 3 は「2 の 3乗が 8」の意味です。

＝＝＝＝＝
下面示範另一種引入方式，利用 from 這個字，告訴程式這個 log2 是'套件' math 下面的 
log2 ，所以可以不用像前面一個例子，前面還要寫 math，而是可以直接用。
他のインポートするの例は下があります。 from でプログラムに”この log2 は math からの
log2 ”に教えるので、前の例と違う、 log2 を直接(ちょくせつ)使用(しよう)が大丈夫です。
"""
from math import log2

print(log2(8))  # 3.0

"""
當我們從同一個套件 import 了多個函式進來時，可以有以下幾種方式，以 log2 和 log10 
為例：

1. import 共同套件，使用時前面都加上套件名稱，優點是可以清楚知道這個函式來自哪個套件，
但缺點就是程式碼會變得比較長。
import math
math.log2(...)
math.log10(...)

2. 一個函式一行引用，優點是不需要引用某個函式時，可以快速移除，但缺點是重複的內容太多
，不是個好的做法。
from math import log2
from math import log10

3. 用逗號分隔同個套件下的不同函式，優點是省去了前一種方法重複的內容，缺點是當引用的
數量一多，這行引用也會變得過長。
from math import log2, log10

4. 用逗號分隔同個套件下的不同函式，搭配括號來換行，優點是排除了前一種方法的缺點。
from math import (
          log2, 
          log10
          )


最一開始提到，要使用'套件'前需要進行安裝，但這個安裝並不是在這裡執行，而是在 cmd 當中，
因此把它的說明放到了最後。

cmd 可以直接在電腦中開啟搜尋，並輸入 cmd 後便可開啟。一般會建議初學者透過 Anaconda 
來安裝 Python ，因此要安裝套件時，需要先進入所謂的'虛擬環境'，然後輸入 
pip install XXX 來進行安裝。

而 Python 本身也有附帶一些'套件'，可以讓你省去安裝這個步驟，'套件' math 就是其中
一個例子。

我知道上面的說明對'初學者'可能有看沒有懂，在這個檔案在的資料夾當中，還有一個叫做 
pip_learning.md 的檔案，裡面有圖片說明應該會比較清楚。

當整份教程完成後，我也會將一些過程中使用到但沒有說明的部分一併補上的。
"""